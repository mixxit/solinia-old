// by default, use WIN displayer
FixedSessionId = 0;
DontUseStdIn = 0;
DontUseAES=1;
DontUseNS=1;

// by default, use localhost to find the naming service
//NSHost = "localhost";	//	"ld-02"; // "linuxshard0"; // localhost"; //
NSHost = "localhost";
AESHost = "localhost";
AESPort = 46702;

// Use Shard Unifier or not
DontUseSU = 1;

// AI & EGS
NbPlayersLimit = 5000;
NbGuildsLimit = 15000;

// EGS
NbObjectsLimit = 50000;
NbNpcSpawnedByEGSLimit = 5000;
NbForageSourcesLimit = 10000;
NbToxicCloudsLimit = 200;

// AI
NbPetLimit = 20000; // NbPlayersLimit*4
NbFaunaLimit = 25000;
NbNpcLimit = 15000;

Paths		+=
{
	"../common/data_leveldesign/leveldesign/DFN",
	"data_shard",
//	"save_shard",
	"../common/data_common",
	"../common/data_leveldesign/primitives"
};

PathsNoRecurse	+=
{
	"../common/data_leveldesign/leveldesign/Game_elem",			// for sheet_id.bin
	"../common/data_leveldesign/leveldesign/game_element",		// not needed at all
	"../common/data_leveldesign/leveldesign/world_editor_files",	// for primitive format
	"../common/data_leveldesign/leveldesign/World",				// static fame and weather ?
	"../common/data_leveldesign/leveldesign/DFN/basics"			// Needed for outposts
};

GeorgePaths	 =
{
	"../common/data_leveldesign/leveldesign/Game_elem",
	"../common/data_leveldesign/leveldesign/game_element"
};

// where to save generic shard data (ie: packed_sheet)
WriteFilesDirectory	= "src/mirror_service/";

// Root directory where data from shards are stored into
SaveShardRoot = "save_shard";

// Where to save specific shard data (ie: player backup), relatively to SaveShardRoot
SaveFilesDirectory	= "";

// Will SaveFilesDirectory will be converted to a full path?
ConvertSaveFilesDirectoryToFullPath = 0;

/* Force default value for PDLib directory (e.g. SaveFilesDirectory...)
 * PLEASE NOTICE THAT THIS LINE MUST BE LEFT TO ""
 * Only log analyser must have the $shard parameter to find all shards root directory
 */
PDRootDirectory = "";

// This is the mapping for logical continent to physical one
ContinentNameTranslator =
{
};

// This is the list of continent to use with their unique instance number
UsedContinents =
{
	"newbieland",	"20"
};

//	define the primitives configuration used.
UsedPrimitives =
{
			"newbieland",
};

NegFiltersDebug		+= { "NET", "ADMIN", "MIRROR", "NC", "PATH", "BSIF", "IOS" };
NegFiltersInfo		+= { "NET", "ADMIN", "MIRROR", "NC", "CF", "TimerManagerUpdate" };
NegFiltersWarning   += { "CT_LRC", "AnimalSpawned" };


FontName = "Lucida Console";
FontSize = 9;

IgnoredFiles = { "continent.cfg", "__read_me.txt", "bandit.html", "flora_primr.primitive" };

// If the update loop is too slow, a thread will produce an assertion.
// By default, the value is set to 10 minutes.
// Set to 0 for no assertion.
UpdateAssertionThreadTimeout = 600000;

DefaultMaxExpectedBlockSize = 200000000; // 200 M !
DefaultMaxSentBlockSize = 200000000; // 200 M !

// how to sleep between to network update
// 0 = pipe
// 1 = usleep
// 2 = nanosleep
// 3 = sched_yield
// 4 = nothing
UseYieldMethod = 0;

// Set to one to use a full static fame and fame propagation matrix instead of
// a lower left half matrix. Remember to update static_fames.txt before
// activating this feature (which can be turned on/off at run time).
UseAsymmetricStaticFames = 1;


MaxOutBandwidth = 100000000;

// Linux only
DestroyGhostSegments = 1;

NegFiltersDebug += { "MSG:" };
